class Solution {
public:
    vector<int> nextsmaller(vector<int>& input) {
        stack<int> s;
        vector<int> ans(input.size());
        s.push(-1);

        for (int i = input.size() - 1; i >= 0; i--) {
            int curr = input[i];
            while (s.top() != -1 && input[s.top()] >= curr) {
                s.pop();
            }

            ans[i] = s.top();

            s.push(i);
        }
        return ans;
    }

    vector<int> prevSmaller(vector<int>& arr) {
        stack<int> st;
        vector<int> ans(arr.size());
        st.push(-1);
        for (int i = 0; i < arr.size(); i++) {
            int curr = arr[i];
            while (st.top() != -1 && arr[st.top()] >= curr) {
                st.pop();
            }

            ans[i] = st.top();
            st.push(i);
        }
        return ans;
    }

    int largestRectangleArea(vector<int>& heights) {
        vector<int>prev = prevSmaller(heights);
        vector<int>next = nextsmaller(heights);
        int max_area = INT_MIN;
        int size = heights.size();
        for(int i =0 ;i<size;i++){
            int length = heights[i];
            if(next[i]==-1){
                next[i] = size;
            }
            int width = next[i]- prev[i]-1;
            int area = length * width;
            max_area = max(max_area, area);
        }
        return max_area;
    }
};
